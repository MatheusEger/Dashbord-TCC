#!/usr/bin/env python3
"""
Orquestra√ß√£o do pipeline:
1) criar banco
2) coletar dados de FIIs
3) obter indicadores da API
4) obter dividendos
5) obter cota√ß√µes
6) scrap de im√≥veis
7) marcar ativos
8) atribuir tipo (apenas via adicionaTIpo.py)
"""
import subprocess
import sys
import os
import traceback

def run_script(script_path, error_file):
    """Executa o script e, em caso de erro, registra em error_file."""
    print(f"‚ñ∂Ô∏è Executando: {script_path}")
    try:
        result = subprocess.run(
            [sys.executable, script_path],
            capture_output=True,
            text=True
        )
        if result.returncode != 0:
            error_file.write(f"\n==== ERRO: {script_path} ====\n")
            error_file.write(result.stdout)
            error_file.write(result.stderr)
            error_file.write("\n")
            print(f"‚ùå Erro em {script_path}. Veja error_log.txt")
        else:
            print(f"‚úÖ Sucesso: {script_path}")
    except Exception as e:
        error_file.write(f"\n==== EXCE√á√ÉO: {script_path} ====\n")
        error_file.write(traceback.format_exc())
        error_file.write("\n")
        print(f"‚ùå Exce√ß√£o em {script_path}. Veja error_log.txt")

if __name__ == '__main__':
    # Caminho raiz (onde este script est√°)
    root_dir = os.path.dirname(os.path.abspath(__file__))

    # Scripts na ordem desejada
    scripts = [
        './scripts/1_criar_banco.py',
        './scripts/2_coletar_dados.py',
        './scripts/3_obter_indicadoresAPI.py',
        './scripts/4_obter_dividendos.py',
        './scripts/5_obter_cotacoes.py',
        './scripts/6_Imoveis_fundamentus.py',
        './scripts/fiis_ativos.py',
        './scripts/adicionaTIpo.py',       # Somente aqui fazemos a atribui√ß√£o de tipos
    ]

    # Abre (ou cria) o log de erros
    log_path = os.path.join(root_dir, 'error_log.txt')
    with open(log_path, 'w', encoding='utf-8') as errf:
        errf.write(f"Log de erros iniciado em {sys.argv[0]}\n")
        # Executa cada um
        for rel in scripts:
            full = os.path.join(root_dir, rel)
            if not os.path.isfile(full):
                errf.write(f"\n==== N√ÉO ENCONTRADO: {full} ====\n")
                print(f"‚ö†Ô∏è Script n√£o encontrado: {full}")
                continue
            run_script(full, errf)

    print("\nüîé Execu√ß√£o conclu√≠da.")
    print("   ‚Ä¢ Verifique error_log.txt para eventuais falhas.")
